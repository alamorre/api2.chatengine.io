# Generated by Django 5.0.4 on 2024-04-22 19:17

import django.db.models.deletion
import django.utils.timezone
import jsonfield.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('title', models.CharField(max_length=999)),
                ('public_key', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('private_key', models.UUIDField(default=uuid.uuid4)),
                ('subscription_id', models.CharField(blank=True, default=None, max_length=1000, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('expires_date', models.DateField(blank=True, default=None, null=True)),
                ('last_project_inactive_email', models.DateField(blank=True, default=None, null=True)),
                ('plan_type', models.CharField(default='basic', max_length=1000)),
                ('promo_code', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('apply_plan', models.BooleanField(default=False)),
                ('monthly_users', models.PositiveIntegerField(default=25)),
                ('message_history', models.PositiveIntegerField(default=14)),
                ('is_emails_enabled', models.BooleanField(default=False)),
                ('email_company_name', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('email_sender', models.EmailField(blank=True, default='', max_length=255, null=True)),
                ('email_link', models.URLField(blank=True, default='', max_length=500, null=True)),
                ('email_last_sent', models.DateTimeField(default=django.utils.timezone.now)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(db_column='email', on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('owner', 'public_key'),
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=999)),
                ('secret', models.CharField(max_length=999)),
                ('email', models.EmailField(blank=True, default='', max_length=255)),
                ('first_name', models.CharField(blank=True, default='', max_length=255)),
                ('last_name', models.CharField(blank=True, default='', max_length=255)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars')),
                ('custom_json', jsonfield.fields.JSONField(default=dict)),
                ('is_online', models.BooleanField(default=False)),
                ('is_authenticated', models.BooleanField(default=True, editable=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(db_column='public_key', on_delete=django.db.models.deletion.CASCADE, related_name='people', to='projects.project')),
            ],
            options={
                'ordering': ('project', 'username'),
            },
        ),
        migrations.CreateModel(
            name='Invite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_email', models.EmailField(default='', max_length=255)),
                ('role', models.CharField(blank=True, default='', max_length=100)),
                ('access_key', models.CharField(blank=True, default='', editable=False, max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(db_column='public_key', on_delete=django.db.models.deletion.CASCADE, related_name='invites', to='projects.project')),
            ],
            options={
                'ordering': ('project', 'to_email'),
            },
        ),
        migrations.CreateModel(
            name='Collaborator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, default='', max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(db_column='email', on_delete=django.db.models.deletion.CASCADE, related_name='orgs', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(db_column='public_key', on_delete=django.db.models.deletion.CASCADE, related_name='collaborators', to='projects.project')),
            ],
            options={
                'ordering': ('user', 'project'),
            },
        ),
        migrations.CreateModel(
            name='Promo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'ordering': ('code',),
                'indexes': [models.Index(fields=['code'], name='projects_pr_code_8e72dd_idx')],
            },
        ),
        migrations.CreateModel(
            name='Connection',
            fields=[
                ('id', models.CharField(editable=False, max_length=100, primary_key=True, serialize=False)),
                ('person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='connections', to='projects.person')),
            ],
            options={
                'ordering': ('id',),
                'indexes': [models.Index(fields=['id'], name='projects_co_id_dd3ab1_idx')],
                'unique_together': {('id',)},
            },
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['public_key'], name='projects_pr_public__d3091e_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['private_key'], name='projects_pr_private_fb61cb_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['subscription_id'], name='projects_pr_subscri_626055_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['is_active', 'plan_type', 'created'], name='projects_pr_is_acti_e9e65f_idx'),
        ),
        migrations.AddIndex(
            model_name='person',
            index=models.Index(fields=['project', 'username'], name='projects_pe_public__0521ea_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='person',
            unique_together={('project', 'username')},
        ),
        migrations.AddIndex(
            model_name='invite',
            index=models.Index(fields=['project', 'to_email'], name='projects_in_public__4814ec_idx'),
        ),
        migrations.AddIndex(
            model_name='invite',
            index=models.Index(fields=['access_key'], name='projects_in_access__c3c095_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='invite',
            unique_together={('project', 'to_email')},
        ),
        migrations.AddIndex(
            model_name='collaborator',
            index=models.Index(fields=['user', 'project'], name='projects_co_email_5f55f0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='collaborator',
            unique_together={('user', 'project')},
        ),
    ]
